ALTER EXTENSION pg_sphere ADD FUNCTION sbox(spoint, spoint);
ALTER EXTENSION pg_sphere ADD FUNCTION sw(sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION se(sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION nw(sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION ne(sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION area(sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION circum(sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR @-@(NONE, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_equal(sbox, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR =(sbox, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR <>(sbox, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_box(sbox, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_box_com(sbox, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_box_neg(sbox, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_box_com_neg(sbox, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_box(sbox, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(sbox, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_box_neg(sbox, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(sbox, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_cont_point_com(spoint, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_cont_point_com_neg(spoint, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_cont_point(sbox, spoint);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_cont_point_neg(sbox, spoint);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_circle(sbox, scircle);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_circle_com(scircle, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_circle_neg(sbox, scircle);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_circle_com_neg(scircle, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION scircle_contains_box(scircle, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION scircle_contains_box_com(sbox, scircle);
ALTER EXTENSION pg_sphere ADD FUNCTION scircle_contains_box_neg(scircle, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION scircle_contains_box_com_neg(sbox, scircle);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_circle(sbox, scircle);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(sbox, scircle);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_circle_com(scircle, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(scircle, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_circle_neg(sbox, scircle);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(sbox, scircle);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_circle_com_neg(scircle, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(scircle, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_line(sbox, sline);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_line_com(sline, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_line_neg(sbox, sline);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_line_com_neg(sline, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_line(sbox, sline);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(sbox, sline);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_line_com(sline, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(sline, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_line_neg(sbox, sline);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(sbox, sline);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_line_com_neg(sline, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(sline, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_ellipse(sbox, sellipse);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_ellipse_com(sellipse, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_ellipse_neg(sbox, sellipse);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_ellipse_com_neg(sellipse, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sellipse_contains_box(sellipse, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sellipse_contains_box_com(sbox, sellipse);
ALTER EXTENSION pg_sphere ADD FUNCTION sellipse_contains_box_neg(sellipse, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sellipse_contains_box_com_neg(sbox, sellipse);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_ellipse(sbox, sellipse);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(sbox, sellipse);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_ellipse_com(sellipse, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(sellipse, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_ellipse_neg(sbox, sellipse);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(sbox, sellipse);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_ellipse_com_neg(sellipse, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(sellipse, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_poly(sbox, spoly);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_poly_com(spoly, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_poly_neg(sbox, spoly);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_poly_com_neg(spoly, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION spoly_contains_box(spoly, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION spoly_contains_box_com(sbox, spoly);
ALTER EXTENSION pg_sphere ADD FUNCTION spoly_contains_box_neg(spoly, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION spoly_contains_box_com_neg(sbox, spoly);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_poly(sbox, spoly);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(sbox, spoly);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_poly_com(spoly, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(spoly, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_poly_neg(sbox, spoly);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(sbox, spoly);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_poly_com_neg(spoly, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(spoly, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_path(sbox, spath);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_path_com(spath, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_path_neg(sbox, spath);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_contains_path_com_neg(spath, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_path(sbox, spath);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(sbox, spath);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_path_com(spath, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR &&(spath, sbox);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_path_neg(sbox, spath);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(sbox, spath);
ALTER EXTENSION pg_sphere ADD FUNCTION sbox_overlap_path_com_neg(spath, sbox);
ALTER EXTENSION pg_sphere ADD OPERATOR !&&(spath, sbox);
